apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "java-app.fullname" . }}
  labels:
    app: {{ template "java-app.name" . }}
    chart: {{ template "java-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: {{ template "java-app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "java-app.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.internalPort }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          {{- end}}
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TZ
            value: {{ .Values.timezone }}
          - name: JAVA_OPTS
            value: "-Denv={{ .Values.apollo.apolloEnv }} -Dapollo.meta={{ .Values.apollo.apolloMeta }} -Dapollo.cluster={{ .Values.apollo.apolloIDC}} -Didc={{ .Values.apollo.apolloIDC}} -Dserver.port={{ .Values.service.internalPort }}"
          {{- range $key,$val := .Values.java }}
          {{- if $val}}
          - name: {{ $key | upper }}
            value: {{ $val }}
          {{- end}}
          {{- end }}
          - name: APOLLO_META
            value: {{ .Values.apollo.apolloMeta }}
          - name: ENV
            value: {{ .Values.apollo.apolloEnv }}
          - name: IDC
            value: {{ .Values.apollo.apolloIDC}}
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          {{- if and .Values.livenessProbe.enabled .Values.healthCheck }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
                path: {{ .Values.healthCheck }}
                port: http
          {{- else if and .Values.livenessProbe.enabled .Values.service.internalPort }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and .Values.readinessProbe.enabled .Values.healthCheck  }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            httpGet:
              path: {{ .Values.healthCheck }}
              port: http
          {{- else if and .Values.readinessProbe.enabled .Values.service.internalPort }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.internalPort }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/{{ .Values.timezone }}
      {{- if .Values.affinity }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              {{- range $key,$val := .Values.affinity }}
              - key: {{ $key }}
                operator: In
                values:
                - {{ $val }}
              {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: {{ .Values.affinity.dedicated |default "app" }}
                  operator: In
                  values:
                  - {{ template "java-app.fullname" . }}
              topologyKey: kubernetes.io/hostname
        {{- end}}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      imagePullSecrets:
      - name: harbor
